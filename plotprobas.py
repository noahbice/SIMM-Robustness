import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from scipy.interpolate import interp1d
from analytical import pV
from matplotlib import rcParams
plt.rc('axes', axisbelow=True)
plt.rc('axes', facecolor='whitesmoke')
rcParams['mathtext.fontset'] = 'cm'
rcParams['font.family'] = "serif"
rcParams['font.sans-serif'] = "Computer Modern"

colors = ['mediumorchid', 'deepskyblue', 'goldenrod', 'forestgreen',
          'violet', 'chocolate', 'salmon',  'gold', 'darkgrey', 'blue']


#curves from mathematica
ss = np.linspace(0.01, 3, 101)
pvs9895 = [1.,1.,0.999996,0.998782,0.987167,0.956814,0.911378,0.85859,0.804375,0.752105,0.703362,0.658695,0.618122,0.581406,0.548211,0.518173,0.490943,0.466199,0.443654,0.423054,0.404177,0.386831,0.370847,0.356079,0.3424,0.329699,0.317877,0.30685,0.296543,0.28689,0.277831,0.269314,0.261295,0.25373,0.246584,0.239822,0.233416,0.227338,0.221565,0.216074,0.210845,0.20586,0.201103,0.196558,0.192213,0.188053,0.184068,0.180247,0.17658,0.173058,0.169673,0.166416,0.163281,0.160262,0.157351,0.154544,0.151834,0.149217,0.146689,0.144244,0.141879,0.139589,0.137372,0.135224,0.133142,0.131123,0.129164,0.127262,0.125415,0.123621,0.121877,0.120182,0.118533,0.116928,0.115366,0.113845,0.112364,0.11092,0.109513,0.108141,0.106803,0.105498,0.104224,0.10298,0.101766,0.10058,0.0994209,0.0982883,0.0971812,0.0960986,0.0950399,0.0940042,0.0929907,0.0919989,0.0910279,0.0900772,0.089146,0.0882339,0.0873402,0.0864645,0.085606]
pvs9890 = [1.,1.,1.,1.,1.,1.,0.999994,0.999913,0.999447,0.997957,0.994655,0.988906,0.980395,0.969135,0.955378,0.939515,0.921984,0.903216,0.883602,0.863478,0.843122,0.822758,0.802561,0.782665,0.763172,0.744151,0.725655,0.707714,0.690348,0.673565,0.657364,0.641739,0.62668,0.612173,0.598202,0.584748,0.571793,0.559319,0.547305,0.535733,0.524584,0.513839,0.503481,0.493493,0.483857,0.474559,0.465582,0.456912,0.448536,0.440441,0.432613,0.425041,0.417714,0.41062,0.40375,0.397095,0.390644,0.384389,0.378321,0.372434,0.36672,0.361171,0.35578,0.350542,0.34545,0.340499,0.335682,0.330996,0.326434,0.321992,0.317666,0.313451,0.309343,0.305338,0.301433,0.297624,0.293908,0.290281,0.28674,0.283283,0.279906,0.276606,0.273382,0.270231,0.26715,0.264137,0.26119,0.258307,0.255485,0.252723,0.25002,0.247372,0.244779,0.242239,0.239751,0.237312,0.234921,0.232577,0.230279,0.228026,0.225815]
pvs9595 = [1.,1.,1.,1.,1.,1.,0.999999,0.99998,0.999829,0.999208,0.997561,0.994279,0.988894,0.981171,0.971114,0.958903,0.944826,0.92922,0.912426,0.894763,0.876516,0.857927,0.839198,0.820495,0.801948,0.783659,0.765706,0.748146,0.731021,0.71436,0.698179,0.682488,0.66729,0.652583,0.63836,0.624612,0.611329,0.598498,0.586104,0.574133,0.562571,0.551403,0.540613,0.530187,0.52011,0.510369,0.50095,0.491839,0.483024,0.474493,0.466233,0.458234,0.450484,0.442974,0.435693,0.428632,0.421782,0.415135,0.408683,0.402417,0.39633,0.390415,0.384665,0.379075,0.373637,0.368347,0.363197,0.358184,0.353302,0.348546,0.343912,0.339395,0.334991,0.330696,0.326506,0.322418,0.318427,0.314532,0.310727,0.307011,0.30338,0.299832,0.296364,0.292973,0.289657,0.286413,0.283239,0.280134,0.277094,0.274118,0.271204,0.26835,0.265554,0.262814,0.26013,0.257498,0.254919,0.252389,0.249909,0.247476,0.245089]
pvs9590 = [1.,1.,1.,1.,1.,1.,1.,1.,1.,1.,0.999999,0.999992,0.999961,0.999857,0.999596,0.999055,0.998092,0.996556,0.994317,0.991271,0.987351,0.982528,0.976806,0.970214,0.962807,0.95465,0.945819,0.936397,0.926463,0.916098,0.905378,0.894372,0.883145,0.871758,0.860263,0.848706,0.83713,0.82557,0.814057,0.80262,0.79128,0.780057,0.768967,0.758025,0.747241,0.736623,0.72618,0.715915,0.705834,0.695938,0.68623,0.676711,0.667379,0.658234,0.649276,0.640501,0.631909,0.623496,0.61526,0.607198,0.599307,0.591583,0.584023,0.576623,0.569381,0.562292,0.555354,0.548561,0.541912,0.535402,0.529029,0.522788,0.516677,0.510691,0.504829,0.499087,0.493461,0.487949,0.482547,0.477254,0.472066,0.46698,0.461994,0.457105,0.452311,0.447609,0.442997,0.438472,0.434033,0.429677,0.425402,0.421206,0.417087,0.413044,0.409073,0.405174,0.401344,0.397582,0.393887,0.390256,0.386688]
pvs9895 = np.array(pvs9895)
pvs9890 = np.array(pvs9890)
pvs9595 = np.array(pvs9595)
pvs9590 = np.array(pvs9590)


print(ss[np.where(np.abs(pvs9895 - 0.95) == np.amin(np.abs(pvs9895 - 0.95)))[0]] * 2)
print(ss[np.where(np.abs(pvs9890 - 0.95) == np.amin(np.abs(pvs9890 - 0.95)))[0]] * 2)
print(ss[np.where(np.abs(pvs9595 - 0.95) == np.amin(np.abs(pvs9595 - 0.95)))[0]] * 2)
print(ss[np.where(np.abs(pvs9590 - 0.95) == np.amin(np.abs(pvs9590 - 0.95)))[0]] * 2)
print(ss[np.where(np.abs(pvs9895 - 0.90) == np.amin(np.abs(pvs9895 - 0.90)))[0]] * 2)
print(ss[np.where(np.abs(pvs9890 - 0.90) == np.amin(np.abs(pvs9890 - 0.90)))[0]] * 2)
print(ss[np.where(np.abs(pvs9595 - 0.90) == np.amin(np.abs(pvs9595 - 0.90)))[0]] * 2)
print(ss[np.where(np.abs(pvs9590 - 0.90) == np.amin(np.abs(pvs9590 - 0.90)))[0]] * 2)



range_sigma_dx = np.linspace(0, 3, 100)
p9890 = np.load('./npydata/p98g90.npy')
p9895 = np.load('./npydata/p98g95.npy')
p9595 = np.load('./npydata/p95g95.npy')
p9590 = np.load('./npydata/p95g90.npy')

#
# pVs1 = pV(7.9, 0.0, (0.95 / 0.98), ss)
# pVs2 = pV(7.9, 0.0, (0.90 / 0.98), ss)
# plt.plot(ss, pVs1, label='Analytical p(V98 > 95) python')
# plt.plot(ss, pVs2, label='Analytical p(V98 > 90) python')

# fig = plt.figure(figsize=(8, 6))
plt.plot(ss, pvs9895, label='Analytical $V^* = 95\%$', color='salmon', ls='--')
plt.plot(range_sigma_dx, p9895, label=r'Numerical $V^* = 95\%$', color='salmon')
plt.plot(ss, pvs9890, label='Analytical $V^* = 90\%$', color='chocolate', ls='--')
plt.plot(range_sigma_dx, p9890, label=r'Numerical $V^* = 90\%$', color='chocolate')
plt.xlabel(r'$\sigma_x$ [mm]', fontsize=14)
plt.ylabel(r'$p(V_{98\%} > V^*)$', fontsize=14)
plt.grid(ls='--')
plt.xlim([0, 3])
plt.ylim([0.15, 1.05])
# legend = plt.legend(facecolor='white', framealpha=1, frameon=1, loc=(0.75, 0.85), fontsize=14, ncol=2)
# frame = legend.get_frame()
# frame.set_edgecolor('black')
plt.savefig('./newfigs/pv98.png', dpi=300)
plt.show()

plt.plot(ss, pvs9595, label='Analytical $V^* = 95\%$', color='salmon', ls='--')
plt.plot(range_sigma_dx, p9595, label=r'Numerical $V^* = 95\%$', color='salmon')
plt.plot(ss, pvs9590, label='Analytical $V^* = 90\%$', color='chocolate', ls='--')
plt.plot(range_sigma_dx, p9590, label=r'Numerical $V^* = 90\%$', color='chocolate')
plt.xlabel(r'$\sigma_x$ [mm]', fontsize=14)
plt.ylabel(r'$p(V_{95\%} > V^*)$', fontsize=14)
plt.grid(ls='--')
# legend = plt.legend(facecolor='white', framealpha=1, frameon=1, fontsize=11, loc='lower left')
# frame = legend.get_frame()
# frame.set_edgecolor('black')
plt.xlim([0, 3])
plt.ylim([0.15, 1.05])
plt.savefig('./newfigs/pv95.png', dpi=300)
plt.show()